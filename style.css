/*=============RESET============================*/
/*RESET para retira espaços padrões do navegador entre os textos. * selecionara todo conteudo da pagina e serão retirados os espaços pelo comando margin: 0. padding diz respeito ao preenchimento. box-sizing*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/*Retirando os pontinhos padrão da slistas em CSS*/
ul {
  list-style: none;
}
a {
  /*Retirando todo sublinhando de links em "a"*/
  text-decoration: none;
}

img {
  /*Adaptar a imagem ao tamanhod a tela */
  width: 100%;
  height: auto;
}

/* ========== Variáveis===========================*/
/*As variáveis podem ser acessadas por qualquer seletor (os seletores são como body ou .logo sendo o primeiro um seletor tag e o segundo um seletor de classe */
:root {
  --header-height: 4.5rem;
  /*==================================Colors*==============================*/
  --hue: 159;
  --base-color: hsl(var(--hue) 36% 57%);
  --base-color-second: hsl(var(--hue) 65% 88%);
  --base-color-alt: hsl(var(--hue) 57% 53%);
  --title-color: hsl(var(--hue) 41% 10%);
  --text-color: hsl(0 0% 46%);
  --text-color-light: hsl(0 0% 98%);
  --body-color: hsl(0 0% 97%);
}

/* =============================== BASE ==============================*/
/*Aqui está sendo configurada as fontes do corpo e dos títulos h1, carregando o valor (conseguido através do google fonts) a proporção e o nome da fonte*/

html {
  /*Esse comando faz a barra de rolagem rolar sozinha ao usar o menu, deslizando para a opção selecionada*/
  scroll-behavior: smooth;
}

body {
  font: 400 1rem 'DM Sans';
  color: var(--text-color);
  background: var(--body-color);
  -webkit-font-smoothing: antialiased;
}

h2 {
  font: 700 1.5rem 'Poppins';
  color: var(--title-color);
  -webkit-font-smoothing: antialiased;
  margin-bottom: 1rem;
}

.title {
  font: 700 1.875rem 'Poppins';
  color: var(--title-color);
  -webkit-font-smoothing: antialiased;
}

.button {
  /*Setando o botão de agendar. background coloca a cor do botão, color, do texto. height diz a altura do botão e display o configura para um tamanho adequado (pode receber block, inline, flex ou uma união de termos);  padding irá centralizar o texto dentro do botão, 0 para cima e baixo, 2 para laterais e o abaulamento do botão. font irá setar a fonte do texto e transition se liga com .button:hover, faz com que a cor setado em hover demore ate x segundos para ascender numa transição de intensidade (suave)*/
  background-color: var(--base-color);
  color: var(--text-color-light);
  height: 3.5rem;
  display: inline-flex;
  align-items: center;
  padding: 0 2rem;
  border-radius: 0.25rem;
  font: 500 1rem 'DM Sans';
  transition: background 0.7s;
}

.button:hover {
  /*Qando houver algo em cima do botão algo acontece, ensse caso vamos mudar a cor*/
  background: var(--base-color-alt);
}

.divider-1 {
  /*Criando um gradiente de cor para a divisão da página (a linha), linear-gradiente recebe 3 parametros, graus (num circulo de cor, quantos graus ele avança) e a cor 0% e a cor 100%. A variável hue pode ser modificada, por isso se for mudada no inicio tudo que depende dela também sofre mudança adequando todas as cores do projeto*/
  height: 2px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 36%, 57%, 1) 0%,
    hsla(var(--hue), 65%, 88%, 0.34) 100%
  );
}

/*Invertendo o laod do traço com gradiente começando do outro lado*/
.divider-2 {
  height: 2px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 65%, 88%, 0.34) 0%,
    hsla(var(--hue), 36%, 57%, 1) 100%
  );
}

/* ================================== LAYOUT ==================================*/
/* Chamar header aqui precisa do # para especificar que é o ID definido lá no html */

#header {
  /* Pixel é uma unidade de medida fixa, por isso preciso de do rem (root element), que irá escalonar o tamanho da tela baseado do device. Isso é o responsivo*/
  color: rgb(81, 131, 84);
  /*Aqui estamos declarando a cor da caixa do cabeçalho, cinza claro, além disso, display: flex faz o contepudo do header ser maleavel para qualquer tamanho de tela*/
  border-bottom: 1px solid rgba(31, 11, 11, 0.863);
  margin-bottom: 2rem;
  display: flex;
  /*Agora vamos feixar o cabeçalho fixo, de forma que rolando a página o cabeçalho continue no topo e passe por cima do conteúdo. pra isso, garantimos que seu tamanho continue 100%, fixamos no topo como position: fixed; seguramos ele na posição 0,0 da pagina (superior esquerda); colocamos ele na frente de tudo com z-index: 100 e garantimos que não perca suas cores setando seu background novamente.*/

  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  background-color: var(--body-color);
}

.logo {
  /*Setando o tamanho do titulo do cabeçalho e customizando*/
  font: 700 1.31rem 'Poppins';
  color: var(--title-color);
}

.logo span {
  /*Aqui estamos indo na logo e procurando a tag span para editar apenas ela, essa tag separou a palavra beautysalon*/
  color: var(--base-color);
}

.container {
  /*Aplicando para todos os containers tamanho e margens, no caso 0 para margens cima e baixo, e automatico para direita e esquerda, posso ser mais especifico quanto as margens designando cada uma*/
  width: 100%;
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

.grid {
  /*Habilita fncionalidades novas do CSS*. gap faz com que tudo que tiver em grid recebe um espaçamento determinado */
  display: grid;
  gap: 2rem;
}

.section {
  /*Aqui estamos configurando as seções, criando espaçamentos superiro e inferior de 80 pixels e laterais de zero*/
  padding: 5rem 0;
}

.section title {
  margin-bottom: 1.86rem;
}

.section header {
  margin-bottom: 4rem;
}
main {
  /*Aqui, configurando o corpo da pagina, a função calc é necessário caso queiramos fazer opreações com a variavel estabelecida, nesse caso, somamos 2 rem (equivale a 32 pixels) para que o header ficasse mais distante do resto do body*/
  margin-top: calc(var(--header-height) + 2rem);
}

/* ================================= Navegação ==============================*/

nav {
  /*display vai fazer com QUE OS DOIS BOX FILHOS DE NAV FIQUEM AO LADO UM DO OUTRO, tentaremos por cada um em uma extremidade do container. justify-content irá justificar os itens e o valor space-between faz com que entre eles haja espaçamento*/
  height: var(--header-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/*Num primeiro momento estamos deixando o menu invisivel, e só se torna visivel ao clicar nele (o que foi trazdio pelo nav.show (tudo junto). Neste segundo, configuramos o quadro do menu que sera mostrado em toda tela. A medida vh e vw em, largura e altura, significa viewport height e viewport width, no caos toda a pagina, a largura do dispositivo. 100 significa que irá cobrir 100%*/
nav .menu {
  opacity: 0;
  visibility: hidden;
  top: -20rem;
}

nav ul li {
  text-align: center;
}

/*Tempo de Trasição da cor que ocorrer no comando logo abaixo*/
nav ul li a {
  transition: color 0.6s;
}

/*Criando a cor que as palavras do menu irão adotar quando o mouser estiver em cima, isso é definido por a:hover (uma vez que a é interação)*/
nav ul li a:hover {
  color: var(--base-color);
}

/*Criando um efeito que ocorre após o mouse estiver em cima do elemento, isso se da pelo ::after. Além disso no bloco é configurado para 0 a largura da reta que só será mostrada quando o mouser estiver em cima, a transição também é calculada para o deslocamento da reta*/
nav ul li a::after {
  content: '';
  width: 0%;
  height: 2px;
  background: var(--base-color);
  display: block;
  transition: width 0.5s;
}

nav ul li a:hover::after {
  width: 100%;
}

nav.show .menu {
  opacity: 1;
  visibility: visible;
  background: var(--body-color);
  height: 100vh;
  width: 100vw;
  /*Caso a pagina seja rolada o quadro continua fixo*/
  position: fixed;
  left: 0;
  top: 0;
  transition: 0.5s;
}

/*Jogando o menu pro meio da tela*/
nav.show .menu {
  display: grid;
  place-content: center;
}

nav.show ul.grid {
  gap: 4rem;
}

/* Menu aparecendo e desaparecendo TOGGLE, começando pelo icone X de close */
.toggle {
  color: var(--base-color);
  font-size: 1.5rem;
  cursor: pointer;
}

nav .icon-close {
  visibility: hidden;
  opacity: 0;
  position: absolute;
  right: 1.5rem;
  /*Os dois codigos abaixo fazer o icone de close deslizar de cima para baixo ao tentar clicar*/
  top: -1.5rem;
  transition: 0.5s;
}

nav.show div.icon-close {
  visibility: visible;
  opacity: 1;
  /*O codigo abaixo concluir a descida do icone close*/
  top: 1.5rem;
}
/*==================================HOME====================================*/
#home {
  background-color: whitesmoke;
}

#home {
  /* Aqui estou evitando que a imagem fique vazada*/
  overflow: hidden;
}
#home .container {
  margin: 0;
}

#home .image {
  position: relative;
}

#home .image::before {
  /*Aqui estamos criando a imagem fantasma (SUDO ELEMENT) por trás de nossa foto, setamos seu tamanho, a sua cor (background), top e left indicam a posição da imagem no body levando em conta a posição relativa da imagem principal, Z index 0 poem a imagem atrás da minha, 1 poem a frente*/
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -16.8%;
  left: 16.7%;
  z-index: 0;
}

#home .image img {
  /*Movendo a imagem, position: relative habilita funções como mover para direita ou esquerda*/
  position: relative;
  right: 2.93rem;
}

/*as repetições de #home abaixo voltadas para a imagem e seu SUDO são para abaular as pontas das imagens. Posso modificar ambas as chamadas separando elas por virgula*/

#home .image img,
#home .image::before {
  border-radius: 0.25rem;
}

#home .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: center;
}

#home. text h1 {
  margin-bottom: 1rem;
}

#home .text p {
  padding: 1rem;
  margin-bottom: 2rem;
}

/*==================================About====================================*/

#about {
  background-color: white;
}
#about {
  overflow: hidden;
}
#about .container {
  margin: 0;
}

#about .image {
  position: relative;
}

#about .image::before {
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -8.3%;
  left: -33%;
  z-index: 0;
}

#about .image img {
  position: relative;
}

#about .image img,
#about .image::before {
  border-radius: 0.25rem;
}

#about .text p {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: center;
}

#about. text h2 {
  margin-bottom: 1rem;
  text-align: left;
}

#about .text p {
  padding: 0.1rem;
  margin-bottom: 2rem;
}

/*=================================Serviços=============================*/

.card.grid {
  gap: 1rem;
}

.card {
  /*Aqui estamos comprimindo o card num quadro menor*/
  padding: 3.6rem 2rem;
  /*Adicionando tom a box de cada card para diferenciar do fundo*/
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.08);
  /*Adicionando uma borda verdinha abaixo do quadro*/
  border-bottom: 0.25rem solid var(--base-color);
  border-radius: 0.25rem 0.25rem 0 0;
  text-align: center;
}

.card i {
  /* Aqui estamos dimensionando os icones (fontsize mexe em seu tamanho)*/
  display: block;
  margin-bottom: 1.5rem;
  font-size: 5rem;
  color: var(--base-color);
}

.card title {
  font-size: 1.5rem;
  margin-bottom: 0.75rem;
}

/*=================================Testimonials=============================*/

#testimonials {
  background: white;
}

#testimonials .container {
  margin-left: 0;
  margin-right: 0;
}

#testimonials header {
  margin-bottom: 0;
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

#testimonials blockquote {
  /*Criando o quadro dos cartões de depoimento*/
  padding: 1rem;
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.08);
  border-radius: 0.25rem;
}

#testimonials blockquote p {
  /*Configurando a posição do texto no bloco*/
  position: relative;
  text-indent: 1.8rem;
  margin-bottom: 1.5rem;
  color: var(--title-color);
}

#testimonials blockquote p span {
  /*Modificando a aspas que está no span*/
  font: 700 2.6rem serif;
  /*Quando a posição é absoluta, ela sobreescreve as camadas abaixo criando uma nova para si*/
  position: absolute;
  top: -0.7rem;
  left: -1.8rem;
  color: var(--base-color);
}

#testimonials cite {
  /*Posicionamento da imagem e texto*/
  display: block;
  align-items: center;
  font-style: normal;
}

#testimonials cite img {
  /*Redimensionando a imagem que estava grande*/
  height: 2rem;
  width: 2rem;
  object-fit: cover;
  /*Criando uma mascara na imagem para deixa-la circular*/
  clip-path: circle();
  margin-right: 0.5rem;
}

.swiper-slide {
  height: auto;
  padding: 4rem 1rem;
}

/*=================================Contact=============================*/

#contact .grid {
  gap: 4rem;
}

#contact .text p {
  margin-bottom: 2rem;
}

#contact .button i,
#contact ul li i {
  font-size: 1.5rem;
  margin-right: 0.62rem;
}

#contact ul.grid {
  gap: 2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
}

#contact {
  background-color: rgba(0, 0, 0, 0.08);
}
